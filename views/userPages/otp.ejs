<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Verify Email</title>
  <link rel="stylesheet" href="/assets/css/otpStyle.css">
</head>
<body>
    <div class="container">
        <h1>Verify OTP</h1>
        <p>A 6-digit code has been sent to your email. Enter the code below to proceed.</p>
        <% if (typeof message !== 'undefined') { %>
            <p style="color: red;" class="d-inline-flex p-2 " ><%= message %>*</p>
        <% } %>
        <form id="otpForm" action="/otp" method="post">
            <div class="otp-fields">
                <input type="text" name="otp-digit-1" maxlength="1" required>
                <input type="text" name="otp-digit-2" maxlength="1" required>
                <input type="text" name="otp-digit-3" maxlength="1" required>
                <input type="text" name="otp-digit-4" maxlength="1" required>
                <input type="text" name="otp-digit-5" maxlength="1" required>
                <input type="text" name="otp-digit-6" maxlength="1" required>
            </div>
            <div class="button-container">
                <button id="verifyButton" type="submit">Verify</button>
                <p id="resendMessage">Resend OTP available in <span id="resendOtpTime">10:00</span></p>
                <a href="/resendOTP?mail=<%- userEmail %>" id="otpButton" style="display: none;">Resend OTP</a>
            </div>  
        </form>
    </div>

    <script>
        let countdownInterval; 

        function startTimer() {
            if (countdownInterval) clearInterval(countdownInterval);

            let count = parseInt(localStorage.getItem('countdown'), 10);
            if (isNaN(count) || count <= 0) {
                count = 600;
            }

            if (count > 0) {
                document.getElementById('otpButton').style.display = 'none';
                document.getElementById('resendMessage').childNodes[0].textContent = 'Resend OTP available in ';
            }

            countdownInterval = setInterval(() => {
                count--;
                localStorage.setItem('countdown', count);

                const minutes = Math.floor(count / 60);
                const seconds = count % 60;
                document.getElementById('resendOtpTime').textContent = `${minutes}:${seconds.toString().padStart(2, '0')}`;

                if (count <= 0) {
                    clearInterval(countdownInterval);
                    localStorage.setItem('countdown', 0);
                    document.getElementById('otpButton').style.display = 'block';
                    document.getElementById('resendMessage').textContent = 'Resend OTP available';
                }
            }, 1000);
        }

        // Function to handle form submission
        function submitForm() {
            const form = document.getElementById('otpForm');
            const formData = new FormData(form);

            console.log("this is the form data", formData)

            // Make an AJAX request to submit the form data
            fetch(form.action, {
                method: form.method,
                body: formData
            })
            .then(response => {
                // Handle response (if needed)
                console.log(response);
            })
            .catch(error => {
                // Handle error (if needed)
                console.error('Error:', error);
            });
        }

        // Start the timer after the page is fully loaded
        window.onload = function() {
            startTimer();

            // Add event listener to the verify button
            document.getElementById('verifyButton').addEventListener('click', function(event) {
                event.preventDefault(); // Prevent default form submission
                submitForm(); // Call the function to submit the form asynchronously
            });
        };

        function moveToNextInput(event) {
            const currentInput = event.target;
            if (currentInput.value.length === 1) {
                const nextInput = currentInput.nextElementSibling;
                if (nextInput && nextInput.tagName === 'INPUT') {
                    nextInput.focus();
                }
            }
        }

        // Add event listeners to input fields
        document.querySelectorAll('.otp-fields input').forEach(input => {
            input.addEventListener('input', moveToNextInput);
        });

    </script>
</body>
</html>