<%- include('../userLayouts/header.ejs') %>


    <div class="page-wrapper">
        
        <%- include('../userLayouts/pageHeader.ejs') %>

		<% const addressNumber = user.address %>

        <main class="main">
        	<div class="page-header text-center" style="background-image: url('assets/images/page-header-bg.jpg')">
        		<div class="container">
        			<h1 class="page-title">Checkout<span>Shop</span></h1>
        		</div><!-- End .container -->
        	</div><!-- End .page-header -->
            <nav aria-label="breadcrumb" class="breadcrumb-nav">
                <div class="container">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/">Home</a></li>
                        <li class="breadcrumb-item"><a href="shop">Shop</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Checkout</li>
                    </ol>
                </div><!-- End .container -->
            </nav><!-- End .breadcrumb-nav -->

            <div class="page-content">
            	<div class="checkout">
	                <div class="container">
            			<div class="checkout-discount">
							<% if (cartItems.coupon_claimed == 0) { %>
								<form id="couponForm" method="post">
									<input type="text" class="form-control couponCode" name="couponCode" required id="checkout-discount-input">
									<label for="checkout-discount-input" class="text-truncate">Have a coupon? <span>Click here to enter your code</span></label>
									<button type="button" class="apply-coupon-btn" onclick="couponApply('couponReqeust')">Apply Coupon</button>
								</form>
								<button type="button" style="display: none;" class="remove-coupon-btn" onclick="removeCoupon()">Remove Coupon</button>
							<% } else if (cartItems.coupon_claimed == 1) { %>
								<form id="couponForm" method="post" style="display: none;">
									<input type="text" class="form-control couponCode" name="couponCode" required id="checkout-discount-input">
									<label for="checkout-discount-input" class="text-truncate">Have a coupon? <span>Click here to enter your code</span></label>
									<button type="button" class="apply-coupon-btn" onclick="couponApply('couponReqeust')">Apply Coupon</button>
								</form>
								<button type="button" style="display: block;" class="remove-coupon-btn" onclick="removeCoupon()">Remove Coupon</button>
							<% } %>
            			</div><!-- End .checkout-discount -->
		                	<div class="row">
								<div class="col-lg-9">
									<h2 class="checkout-title"><u>Address Details</u></h2><!-- End .checkout-title -->
								
									<% if (address.length != 0) { %>
										<!-- Display default address -->
										<div class="default-address border rounded border-secondary p-3 mb-1">
											<p><strong><i>Selected Address</i>:</strong></p>
											<p><span style="color: #333; font-weight: 500;">Name : </span><span id="selectedAddressName"><%= address[addressNumber].name %></span></p>
											<p><span style="color: #333; font-weight: 500;">Address : </span><span id="selectedAddressPlace"><%= address[addressNumber].locality %>, <%= address[addressNumber].city %>, <%= address[addressNumber].state %></span></p>
											<p><span style="color: #333; font-weight: 500;">Pin code : </span><span id="selectedAddressPincode"><%= address[addressNumber].pincode %></span></p>
											<p><span style="color: #333; font-weight: 500;">Contact Number : </span><span id="selectedAddressNumber"><%= address[addressNumber].mobileNumber %></span></p>
										</div>
									<% } else if (!address) { %>
										<div class="default-address border rounded border-secondary p-3 mb-1">
											<p><strong><i>Add a Address</i></strong></p>
										</div>
									<% } %>
								
									<div class="addressButtons row justify-content-between mx-3">
										<div>
											<% if (address.length != 0) { %>
												<a id="openModalButton" href="" class="btn btn-link" onmouseover="this.style.fontWeight = '700'" onmouseout="this.style.fontWeight = '400'">Ship to a different address ?</a>
											<% } else if (!address) { %>
											<% } %>
											<!-- Option to change address -->
										</div>
										<div>
											<!-- Option to add a new address -->
											<a href="/addAddress?from=CP" class="btn btn-link" onmouseover="this.style.fontWeight = '700'" onmouseout="this.style.fontWeight = '400'">Add a new Address +</a>
										</div>
										<div>
											<!-- Option to edit the address -->
											<% if (address.length != 0) { %>
												<a href="/editAddress?id=<%= address[0]._id %>&from=CP" class="btn btn-link" onmouseover="this.style.fontWeight = '700'" onmouseout="this.style.fontWeight = '400'">Edit Address<svg xmlns="http://www.w3.org/2000/svg" height="18px" viewBox="0 -960 960 960" width="24px" fill="#5a90db"><path d="M200-200h57l391-391-57-57-391 391v57Zm-80 80v-170l528-527q12-11 26.5-17t30.5-6q16 0 31 6t26 18l55 56q12 11 17.5 26t5.5 30q0 16-5.5 30.5T817-647L290-120H120Zm640-584-56-56 56 56Zm-141 85-28-29 57 57-29-28Z"/></svg></a>
											<% } else if (!address) { %>
											<% } %>
										</div>
									</div>
									
									<div class="checkout-title"><u>Payment Details</u></div>
								<div class="border rounded p-4 mt-2">
									<div class="accordion-summary" id="accordion-payment">
										<div class="card">
											<div class="card-header" id="heading-1">
												<h2 class="card-title">
													<a id="payment-cod" role="button" data-toggle="collapse" href="#collapse-1" aria-expanded="true" aria-controls="collapse-1">
														Cash on delivery
													</a>
												</h2>
											</div><!-- End .card-header -->
											<div id="collapse-1" class="collapse show" aria-labelledby="heading-1" data-parent="#accordion-payment">
												<div class="card-body">
													Make your payment directly into our bank account. Please use your Order ID as the payment reference. Your order will not be shipped until the funds have cleared in our account.
												</div><!-- End .card-body -->
											</div><!-- End .collapse -->
										</div><!-- End .card -->

										<div class="card">
											<div class="card-header" id="heading-4">
												<h2 class="card-title">
													<a id="payment-razorpay" class="collapsed" role="button" data-toggle="collapse" href="#collapse-4" aria-expanded="false" aria-controls="collapse-4">
														Razor pay <small class="float-right paypal-link"></small>
													</a>
												</h2>
											</div><!-- End .card-header -->
											<div id="collapse-4" class="collapse" aria-labelledby="heading-4" data-parent="#accordion-payment">
												<div class="card-body">
													Nullam malesuada erat ut turpis. Suspendisse urna nibh, viverra non, semper suscipit, posuere a, pede. Donec nec justo eget felis facilisis fermentum.
												</div><!-- End .card-body -->
											</div><!-- End .collapse -->
										</div><!-- End .card -->

										<div class="card">
											<div class="card-header" id="heading-2">
												<h2 class="card-title">
													<a id="payment-bank" class="collapsed" role="button" data-toggle="collapse" href="#collapse-2" aria-expanded="false" aria-controls="collapse-2">
														Direct bank transfer
													</a>
												</h2>
											</div><!-- End .card-header -->
											<div id="collapse-2" class="collapse" aria-labelledby="heading-2" data-parent="#accordion-payment">
												<div class="card-body">
													Make your payment directly into our bank account. Please use your Order ID as the payment reference. Your order will not be shipped until the funds have cleared in our account.
												</div><!-- End .card-body -->
											</div><!-- End .collapse -->
										</div><!-- End .card -->

										<div class="card">
											<div class="card-header" id="heading-3">
												<h2 class="card-title">
													<a id="payment-check" class="collapsed" role="button" data-toggle="collapse" href="#collapse-3" aria-expanded="false" aria-controls="collapse-3">
														Check payments
													</a>
												</h2>
											</div><!-- End .card-header -->
											<div id="collapse-3" class="collapse" aria-labelledby="heading-3" data-parent="#accordion-payment">
												<div class="card-body">Quisque volutpat mattis eros. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec odio. Quisque volutpat mattis eros.
												</div><!-- End .card-body -->
											</div><!-- End .collapse -->
										</div><!-- End .card -->

										<div class="card">
											<div class="card-header" id="heading-5">
												<h2 class="card-title">
													<a id="payment-stripe" class="collapsed" role="button" data-toggle="collapse" href="#collapse-5" aria-expanded="false" aria-controls="collapse-5">
														Credit Card (Stripe)
														<img src="assets/images/payments-summary.png" alt="payments cards">
													</a>
												</h2>
											</div><!-- End .card-header -->
											<div id="collapse-5" class="collapse" aria-labelledby="heading-5" data-parent="#accordion-payment">
												<div class="card-body"> Donec nec justo eget felis facilisis fermentum.Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec odio. Quisque volutpat mattis eros. Lorem ipsum dolor sit ame.
												</div><!-- End .card-body -->
											</div><!-- End .collapse -->
										</div><!-- End .card -->
									</div><!-- End .accordion -->
								</div>

								<!-- Hidden field to store selected payment method -->
								<input type="hidden" id="selected-payment-method" name="selected-payment-method" value="payment-cod">

								</div><!-- End .col-lg-9 -->
								<aside class="col-lg-3">
		                			<div class="summary">
		                				<h3 class="summary-title">Your Order</h3><!-- End .summary-title -->

		                				<table class="table table-summary">
		                					<thead>
		                						<tr>
		                							<th>Product</th>
		                							<th>Total</th>
		                						</tr>
		                					</thead>

		                					<tbody>
												<% for (let i = 0; i < cartItems.products.length; i++) { %>
													<tr>
														<td><a href="#"><%= cartItems.products[i].product.name %> <b>x <%= cartItems.products[i].quantity %></b></a></td>
														<td>₹ <%= cartItems.products[i].product_total %>.00</td>
													</tr>
												<% } %>
		                						<tr class="summary-subtotal">
		                							<td>Subtotal:</td>
		                							<td>₹ <%= cartItems.total_price %>.00</td>
		                						</tr><!-- End .summary-subtotal -->
		                						<tr>
		                							<td>Shipping:</td>
		                							<td>Free shipping</td>
		                						</tr>
												<% if (cartItems.discount_amount !== 0) { %>
													<tr id="couponAmountHtml">
														<td>Coupon Discount:</td>
														<td>₹ <span id="couponDiscountAmoountOnTotal"><%= cartItems.discount_amount %></span>.00</td>
													</tr>
												<% } %>
		                						<tr class="summary-total">
		                							<td>Total:</td>
		                							<td>₹ <span id="CheckoutCouponDiscountAmoountOnTotal"><%= cartItems.total_price - cartItems.discount_amount %></span>.00</td>
		                						</tr><!-- End .summary-total -->
		                					</tbody>
		                				</table><!-- End .table table-summary -->

										<% if (address.length != 0) { %>
											<button type="submit" onclick="placeOrder('<%= address[addressNumber]._id %>', 'placeOrder', document.getElementById('selected-payment-method').value )" class="btn btn-outline-primary-2 btn-order btn-block">
												<span class="btn-text">Place Order</span>
												<span class="btn-hover-text">Place Order</span>
											</button>
										<% } else if (!address) { %>

										<% } %>
		                				
		                			</div><!-- End .summary -->
									
		                		</aside><!-- End .col-lg-3 -->
		                	</div><!-- End .row -->
	                </div><!-- End .container -->
                </div><!-- End .checkout -->
            </div><!-- End .page-content -->
        </main><!-- End .main -->


		<!--       To Popup the window for Address Selection         -->
		<div id="myModal" class="modal">
			<div class="modal-content">
				<h2 class="modal-heading">Select Address</h2>
				<form id="addressForm">
					<!-- Populate this list dynamically with available addresses -->
					<% for (let i = 0; i < address.length; i++) { %>
						<% if (i == 0) { %>
							<input type="radio" id="address<%= i %>" name="address" value="<%= JSON.stringify(address[i]) %>" checked>
						<% } else { %>
							<input type="radio" id="address<%= i %>" name="address" value="<%= JSON.stringify(address[i]) %>">
						<% } %>
					<label for="address<%= i %>">
						<div class="default-address border rounded border-secondary p-3 mb-1">
							<p><span style="color: #333; font-weight: 500;">Name : </span><%= address[i].name %></p>
							<p><span style="color: #333; font-weight: 500;">Address : </span><%= address[i].locality %>, <%= address[i].city %>, <%= address[i].state %></p>
							<p><span style="color: #333; font-weight: 500;">Pin code : </span><%= address[i].pincode %></p>
							<p><span style="color: #333; font-weight: 500;">Contact Number : </span><%= address[i].mobileNumber %></p>
						</div>
					</label><br>
					<% } %>
					<!-- Add more addresses as needed -->
					<button type="button" onclick="selectAddress()" >Select</button>
					<button type="button" onclick="closeModal()" >Close</button>
				  </form>
			</div>
		</div>

        <%- include('../userLayouts/pageFooter.ejs') %>
        
    </div><!-- End .page-wrapper -->
    <button id="scroll-top" title="Back to Top"><i class="icon-arrow-up"></i></button>

	<script>

		/*********************     
		 * 
		 * 
		 * 
		 * 
		 *   Payment and order Function
		 * 
		 * 
		 * 
		 * 
		 *********************/

		let paymentMethod = '';

		document.addEventListener('DOMContentLoaded', function() {
			const paymentMethods = document.querySelectorAll('#accordion-payment .card-title a');
			const selectedPaymentInput = document.getElementById('selected-payment-method');

			paymentMethods.forEach(method => {
				method.addEventListener('click', function() {

					// Get the ID of the selected payment method
					const selectedMethod = this.id;

					// Update the hidden input field with the selected payment method
					selectedPaymentInput.value = selectedMethod;
					paymentMethod = selectedMethod;

				});
			});
		});

		function placeOrder (addressId, message, paymentMethod) {
			fetch('/checkout', { 
                    method: 'post',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ addressId: addressId, paymentMethod }),
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
					if (paymentMethod === 'payment-razorpay' && data.razorpayOrderId) {
						// Initiate Razorpay payment
						const options = {
							key: data.key , 
							amount: data.amount * 100 , // To convert to Paisa
							currency: data.currency ,
							name: 'Phone Zee' ,
							// description: 'Order Payment',
							order_id: data.razorpayOrderId ,
							handler: function (response) {
								// Handle payment success
								fetch('/confirm-payment', {
									method: 'post',
									headers: {
										'Content-Type': 'application/json'
									},
									body: JSON.stringify({
										orderId: data.orderId,
										razorpayPaymentId: response.razorpay_payment_id,
										razorpayOrderId: response.razorpay_order_id,
										razorpaySignature: response.razorpay_signature
									})
								})
								.then(response => response.json())
								.then(data => {
									if (data.message === 'Success') {
										Swal.fire({
											icon: 'success',
											title: 'Order Confirmed!',
											text: 'Your order has been successfully placed.',
											confirmButtonText: 'OK'
										}).then(() => {
											console.log('Order Confirmed');
											window.location.href = `/orderSuccess?id=${data.orderId}`;
										});
									} else if (data.message === 'Payment not confirmed') {
										Swal.fire({
											icon: 'error',
											title: 'Payment not confirmed!',
											text: 'Payment not confirmed. Please contact support.',
											confirmButtonText: 'OK'
										});
									} else {
										Swal.fire({
											icon: 'error',
											title: 'Payment Failed!',
											text: 'Your payment was successful but order placement failed. Please contact support.',
											confirmButtonText: 'OK'
										});
									}
								})
								.catch(error => {
									console.error('Error:', error);
								});
							},
							prefill: {
								name: "Afsal",
								email: "email@example.com",
								contact: "9876543210"
							},
							theme: {
								color: "#3399cc"
							}
						};
						const rzp1 = new Razorpay(options);
						rzp1.on('payment.failed', function (response) {
							console.error(response.error);
							Swal.fire({
								icon: 'error',
								title: 'Payment Failed!',
								text: 'There was an issue with your payment. Please try again.',
								confirmButtonText: 'OK'
							});
						});
						rzp1.open();
					} else  if(data.message == 'Success') {
                        Swal.fire({
							icon: 'success',
							title: 'Order Confirmed!',
							text: 'Your order has been successfully placed.',
							confirmButtonText: 'OK'
						}).then(() => {
							console.log('Order Confirmed');
							console.log(data.orderId);
							window.location.href = `/orderSuccess?id=${data.orderId}`;
						});
                    } else if (data.message == 'Order Already Exists') {
                        Swal.fire({
							icon: 'error',
							title: 'Order Cancelled!',
							text: 'Order Already Exists.',
							confirmButtonText: 'OK'
						}).then(() => {
							console.log('Order Failed');
							window.location.href = '/checkout';
						});
                    } else if (data.message == 'Payment Method not Available') {
                        Swal.fire({
							icon: 'error',
							title: 'Payment Method unAvailable',
							text: 'Choose another payment gateway',
							confirmButtonText: 'OK'
						}).then(() => {
							console.log('Payment Failed');
						});
                    } else {
                        window.location.reload();
                    };
                })
                .catch(error => {
                    console.error('Error:', error);
                });
		};


			/*********************     
			 * 
			 * 
			 * 
			 * 
			 *   Other functions
			 * 
			 * 
			 * 
			 * 
			 *********************/


		var modal = document.getElementById("myModal");

		var btn = document.getElementById("openModalButton");

		btn.onclick = function() {
			modal.style.display = "block";
		};

		function selectAddress(address) {
            var selectedAddress = document.querySelector('input[name="address"]:checked');
            if (selectedAddress) {
				const add2 = selectedAddress.value
				const address1 = JSON.parse(add2);

				console.log('Address value - ', address1._id)
				console.log('user value - ', address1.user)


				const addressId = address1._id;
				const userId = address1.user;

				fetch('/addressChange', { // Corrected URL to include userId in the route
					method: 'post',
					headers: {
						'Content-Type': 'application/json'
					},
					body: JSON.stringify({ addressId, userId }),
				})
				.then(response => {
					if (!response.ok) {
						throw new Error('Network response was not ok');
					}
					return response.json();
				})
				.then(data => {
					if(data.message == 'Failed') {
						console.log('user Not Found')
					} else {
						// Pass the selected address back to the main page
						// You can use any appropriate method here, like setting a hidden input value
						document.getElementById("selectedAddressName").textContent = address1.name;
						document.getElementById("selectedAddressPlace").innerHTML = address1.locality + ", " + address1.city + ", " + address1.state;
						document.getElementById("selectedAddressPincode").innerHTML = address1.pincode;
						document.getElementById("selectedAddressNumber").innerHTML = address1.mobileNumber;
						// document.getElementById("selectedAddress").value = address1._id;
						closeModal();
					};
				})
				.catch(error => {
					console.error('Error:', error);
				});




                // // Pass the selected address back to the main page
                // // You can use any appropriate method here, like setting a hidden input value
                // document.getElementById("selectedAddressName").textContent = address1.name;
				// document.getElementById("selectedAddressPlace").innerHTML = address1.locality + ", " + address1.city + ", " + address1.state;
				// document.getElementById("selectedAddressPincode").innerHTML = address1.pincode;
				// document.getElementById("selectedAddressNumber").innerHTML = address1.mobileNumber;
				// // document.getElementById("selectedAddress").value = address1._id;
                // closeModal();
            } else {
                alert("Please select an address.");
            };
        };

        // When the user clicks on <span> (x), close the modal
        function closeModal() {
            modal.style.display = "none";
        };

		btn.onclick = function(event) {
			event.preventDefault(); // Prevent default behavior of anchor element
			modal.style.display = "block";
		};

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function(event) {
            if (event.target == modal) {
                modal.style.display = "none";
            };
        };

		
		
		//
		//
		// To apply the coupon
		//
		//
		
		function couponApply (validMessage) {
			const couponHtmlForm = document.getElementById('couponForm');
			const couponHtml = document.getElementById('couponAmountHtml');
			const couponCodeInput = document.querySelector('.form-control.couponCode');
			const removeCouponHtml = document.querySelector('.remove-coupon-btn');
			const totalAmountWithDiscount = document.getElementById('CheckoutCouponDiscountAmoountOnTotal');

			let couponCode = 'No Code';
			
			if (couponCodeInput.value !== null) {
				couponCode = couponCodeInput.value;
			};	

			fetch('/checkout', {
				method: 'post',
				headers: {
					'Content-Type': 'application/json'
				},
				body: JSON.stringify({ couponCode, validMessage }),
			})
			.then(response => {
				if (!response.ok) {
					throw new Error('Network response was not ok');
				}
				return response.json();
			})
			.then(data => {
				if (data.message === 'Wrong Coupon Code') {
					Swal.fire({
						icon: 'error',
						title: 'Wrong Coupon Code!',
						text: 'Check the coupon code again.',
						confirmButtonText: 'OK'
					}).then(() => {
						console.log('Wrong Coupon Code');
					});
				} else if (data.message === 'Success') {
					Swal.fire({
						icon: 'success',
						title: 'Coupon Applied!',
						text: 'Coupon Applied Successfully.',
						confirmButtonText: 'OK'
					}).then(() => {
						window.location.reload();
						couponHtml.style.display = 'contents';
						couponHtmlForm.style.display = 'none';
						removeCouponHtml.style.display = 'block';
						totalAmountWithDiscount.textContent = data.totalAmountWithDiscount;
					});
				}  else if (data.message === 'Coupon Claimed') {
					Swal.fire({
						icon: 'info',
						title: 'Coupon Already Claimed!',
						text: 'Enter anohter Coupon Code.',
						confirmButtonText: 'OK'
					})
				} else if (data.message === 'Coupon quantity depleted') {
					Swal.fire({
						icon: 'error',
						title: 'Coupon Quantity Depleted!',
						text: 'This coupon is no longer available.',
						confirmButtonText: 'OK'
					}).then(() => {
						console.log('Coupon quantity depleted');
						// Optionally, you can refresh the page or perform other actions here
					});
				} else if (data.message === 'Coupon expired') {
					Swal.fire({
						icon: 'error',
						title: 'Coupon Expired!',
						text: 'This coupon has expired and is no longer valid.',
						confirmButtonText: 'OK'
					}).then(() => {
						console.log('Coupon expired');
						// Optionally, you can refresh the page or perform other actions here
					});
				} else if (data.message === 'Minimum purchase amount not met') {
					Swal.fire({
						icon: 'error',
						title: `Minimum Purchase Amount is ${data.minimumPurchaseAmount}!`,
						text: 'Your cart total does not meet the minimum required for this coupon.',
						confirmButtonText: 'OK'
					}).then(() => {
						console.log('Minimum purchase amount not met');
					});
				} else {
					Swal.fire({
						icon: 'error',
						title: 'Coupon Application Failed!',
						text: 'There was an error applying your coupon.',
						confirmButtonText: 'OK'
					}).then(() => {
						window.location.href = '/checkout';
					});
				};
			})
			.catch(error => {
				console.error('Error:', error);
				Swal.fire({
					icon: 'error',
					title: 'Network Error!',
					text: 'There was a problem applying your coupon. Please try again later.',
					confirmButtonText: 'OK'
				}).then(() => {
					window.location.href = '/checkout';
				});
			});
		};


		//
		//
		// To Remove the Coupon
		//
		//

		function removeCoupon() {

			const validMessage = 'couponRemovalMessage';

			const couponHtml = document.getElementById('couponAmountHtml');
			const couponHtmlForm = document.getElementById('couponForm');
			const totalAmountWithDiscount = document.getElementById('CheckoutCouponDiscountAmoountOnTotal'); 
			const removeCouponHtml = document.querySelector('.remove-coupon-btn');
			
			fetch('/checkout', {
				method: 'post',
				headers: {
					'Content-Type': 'application/json'
				},
				body: JSON.stringify({ validMessage }),
			})
			.then(response => {
				if (!response.ok) {
					throw new Error('Network response was not ok');
				}
				return response.json();
			})
			.then(data => {
				if (data.message === 'Failed') {
					Swal.fire({
						icon: 'error',
						title: 'Coupon Removal Failed!',
						text: 'There was an error removing your coupon. Please try again.',
						confirmButtonText: 'OK'
					}).then(() => {
						console.log('Coupon removal failed');
						window.location.reload();
					});
				} else if (data.message === 'Success') {
					Swal.fire({
						icon: 'success',
						title: 'Coupon Removed!',
						text: 'Coupon removed successfully.',
						confirmButtonText: 'OK'
					}).then(() => {
						couponHtml.style.display = 'none';
						couponHtmlForm.style.display = 'block';
						removeCouponHtml.style.display = 'none'
						totalAmountWithDiscount.textContent = data.totalAmountWithDiscountValue;
					});
				};
			})
			.catch(error => {
				// console.error('Error:', error);
				// Swal.fire({
				// 	icon: 'error',
				// 	title: 'Network Error!',
				// 	text: 'There was a problem removing your coupon. Please try again later.',
				// 	confirmButtonText: 'OK'
				// }).then(() => {
				// 	console.log('Network error');
				// });
				console.log('Network error');
			});
		};


	</script>

<%- include('../userLayouts/footer.ejs') %>