
    <%- include('../adminLayouts/header.ejs') %>

        <%- include('../adminLayouts/pageHeader.ejs') %>

            <section class="content-main">
                <div class="row">
                    <div class="col-9">
                        <div class="content-header">
                            <h2 class="content-title">Add New Product</h2>
                            <div>
                                <button class="btn btn-light rounded font-sm mr-5 text-body hover-up">Save to draft</button>
                                <button class="btn btn-md rounded font-sm hover-up">Add +</button>
                            </div>
                        </div>
                    </div>
                    <div class="col-9">
                        <div class="card">
                            <div class="card-body">
                                <div class="row gx-5">
                                    <aside class="col-lg-3 border-end">
                                        <nav class="nav nav-pills flex-column mb-4">
                                            <a class="nav-link active" aria-current="page" href="#">General</a>
                                            <!-- <a class="nav-link" href="/admin/addproductPrice">Pricing</a>
                                            <a class="nav-link" href="/admin/addproductImages">Images</a>
                                            <a class="nav-link" href="/admin/addproductRelatedproducts">Related items</a> -->
                                        </nav>
                                    </aside>
                                    <div class="col-lg-9">
                                        <section class="content-body p-xl-4">
                                            <% if (typeof message !== 'undefined') { %>
                                                <p id="error-element" style="color: red;" class="d-inline-flex p-2 " ><%= message %>*</p>
                                            <% } %>
                                            <p id="backend-error-element" style="color: red;" class="d-inline-flex p-2 display:block" ></p>
                                            <form enctype="multipart/form-data" onsubmit="submitForm(event)" >
                                                <div class="row mb-4">
                                                    <label class="col-lg-3 col-form-label">Product name*</label>
                                                    <div class="col-lg-9">
                                                        <input type="text" name="productName" class="form-control" placeholder="Type here" />
                                                    </div>
                                                    <!-- col.// -->
                                                </div>
                                                <!-- row.// -->
                                                <div class="row mb-4">
                                                    <label class="col-lg-3 col-form-label">Description*</label>
                                                    <div class="col-lg-9">
                                                        <textarea class="form-control" name="productDescription" placeholder="Type here" rows="4"></textarea>
                                                    </div>
                                                    <!-- col.// -->
                                                </div>
                                                <!-- row.// -->
                                                <div class="row mb-4">
                                                    <label class="col-lg-3 col-form-label">Category*</label>
                                                    <div class="col-lg-4">
                                                        <select class="form-select" name="productCategory">
                                                            <option>select category</option>
                                                            <% for (let i = 0; i < categories.length; i++) { %>
                                                                <option><%= categories[i].name %></option>
                                                            <% } %>
                                                        </select>
                                                    </div>
                                                    <!-- col.// -->
                                                </div>
                                                <div class="row mb-4">
                                                    <label class="col-lg-3 col-form-label">Price*</label>
                                                    <div class="col-lg-9">
                                                        <input type="number" name="productPrice" class="form-control" placeholder="Type here" />
                                                    </div>
                                                    <!-- col.// -->
                                                </div>
                                                <!-- row.// -->
                                                <div class="row mb-4">
                                                    <label class="col-lg-3 col-form-label">Stock*</label>
                                                    <div class="col-lg-9">
                                                        <input type="number" name="productStock" class="form-control" placeholder="Type here" />
                                                    </div>
                                                    <!-- col.// -->
                                                </div>
                                                <!-- row.// -->
                                                <div class="row mb-4">
                                                    <label class="col-lg-3 col-form-label">Add 4 images</label>
                                                    <div class="col-lg-9">
                                                        <input 
                                                        type="file" 
                                                        id="imageInput1"
                                                        class="form-control" 
                                                        accept=".png, .jpeg, .jpg, .webp" 
                                                        name="image_1" 
                                                        placeholder="Type here" 
                                                        maxlength="4" 
                                                        onchange="previewImage(event, 'image-preview-1')" 
                                                        multiple
                                                        />
                                                        <div id="image-preview-1" class="mt-3"></div>
                                                    </div>
                                                    <!-- col.// -->
                                                </div>
                                                <!-- row.// -->
                                                <div class="row mb-4">
                                                    <label class="col-lg-3 col-form-label">Ram*</label>
                                                    <div class="col-lg-4">
                                                        <input type="tel" name="productRam" class="form-control" placeholder="Type" />
                                                    </div>
                                                    <!-- col.// -->
                                                </div><!-- row.// -->
                                                <div class="row mb-4">
                                                    <label class="col-lg-3 col-form-label">Storage*</label>
                                                    <div class="col-lg-4">
                                                        <input type="tel" name="productStorage" class="form-control" placeholder="Type" />
                                                    </div>
                                                    <!-- col.// -->
                                                </div>
                                                <!-- row.// -->
                                                <br />
                                                <button class="btn btn-primary" type="submit" >Add Product</button>
                                            </form>
                                        </section>
                                        <!-- content-body .// -->
                                    </div>
                                    <!-- col.// -->
                                </div>
                                <!-- row.// -->
                            </div>
                            <!-- card body end// -->
                        </div>
                    </div>
                </div>
            </section>

            <div id="cropModal" style="display:none; position:fixed; top:0; left:0; right:0; bottom:0; background:rgba(0,0,0,0.6); justify-content:center; align-items:center;">
                <div style="background:white; padding:10px; border-radius:10px;">
                    <img id="cropImage" style="max-width:100%;"/>
                    <button id="cropConfirm">Crop</button>
                    <button id="cropCancel">Cancel</button>
                </div>
            </div>              

            <%- include('../adminLayouts/pageFooter.ejs') %>

            <script>
                let croppedImagesMap = new Map(); // key = file.name, value = cropped File
            
                function submitForm(e) {
                    e.preventDefault();
                    const form = e.target;
                    const formData = new FormData(form);
                    formData.delete("image_1")

                    const fileInput = document.getElementById("imageInput1");
                    if (!fileInput) {
                        console.error("File input not found!");
                        return;
                    }

                    const files = fileInput.files;

                    // Append either cropped or original
                    for (let i = 0; i < files.length; i++) {
                        const file = files[i];
                        if (croppedImagesMap.has(file.name)) {
                            formData.append("image_1", croppedImagesMap.get(file.name));
                        } else {
                            formData.append("image_1", file);
                        }
                    }

                    // Send to backend
                    fetch("/admin/addproduct", {
                        method: "POST",
                        body: formData,
                    })
                    .then(async (res) => {
                        if (!res.ok) {
                            const errorData = await res.json();
                            throw new Error(errorData.message || "Something went wrong");
                        }
                        return res.json();
                    })
                    .then((data) => {
                        Swal.fire({
                            title: data.message,
                            icon: "success",
                        }).then(() => {
                            window.location.href = "/admin/productList";
                        });
                    })
                    .catch((err) => {
                        console.error("Error:", err);
                        document.getElementById("backend-error-element").innerText = err.message;
                    });
                }
            
                function previewImage(event, previewId) {
                    const previewContainer = document.getElementById(previewId);
                    previewContainer.innerHTML = '';
                    const files = event.target.files;
            
                    if (files && files.length <= 4) {
                        for (let i = 0; i < files.length; i++) {
                            const file = files[i];
                            const reader = new FileReader();
            
                            reader.readAsDataURL(file);
                            reader.onload = (event) => {
                                let image_url = event.target.result;
            
                                let image = document.createElement("img");
                                image.src = image_url;
            
                                let imageContainer = document.createElement("div");
                                imageContainer.style.display = "inline-block";
                                imageContainer.style.position = "relative";
                                imageContainer.style.width = "100px";
                                imageContainer.style.height = "100px";
            
                                // Crop button
                                let cropButton = document.createElement("button");
                                cropButton.innerHTML = '<i class="bi bi-crop"></i>';
                                cropButton.style.position = "absolute";
                                cropButton.style.top = "10px";
                                cropButton.style.left = "50%";
                                cropButton.style.backgroundColor = "blue";
                                cropButton.style.color = "white";
                                cropButton.style.borderRadius = "5px";
                                cropButton.style.transform = "translateX(40%)";
                                cropButton.style.border = "none";
            
                                cropButton.onclick = function (e) {
                                    e.preventDefault();
                                    cropImage(image_url, file.name).then((croppedFile) => {
                                        const previewUrl = URL.createObjectURL(croppedFile);
                                        image.src = previewUrl;
                                        croppedImagesMap.set(file.name, croppedFile);
                                    });
                                };
            
                                // Delete button
                                let deleteButton = document.createElement("button");
                                deleteButton.innerText = "Delete";
                                deleteButton.style.bottom = "5px";
                                deleteButton.style.left = "50%";
                                deleteButton.style.transform = "translateX(50%)";
                                deleteButton.style.backgroundColor = "red";
                                deleteButton.style.color = "white";
                                deleteButton.style.borderRadius = "5px";
                                deleteButton.onclick = function () {
                                    imageContainer.remove();
                                    croppedImagesMap.delete(file.name);
                                };
            
                                imageContainer.appendChild(image);
                                imageContainer.appendChild(deleteButton);
                                imageContainer.appendChild(cropButton);
                                previewContainer.appendChild(imageContainer);
                            };
                        }
                    } else {
                        let alertMessage = document.createElement("p");
                        alertMessage.style.color = "red";
                        alertMessage.innerHTML = "Maximum 4 files allowed*.";
                        previewContainer.appendChild(alertMessage);
                        event.target.value = '';
                    }
                }
            
                let cropper;
            
                function cropImage(image_url, fileName) {
                    return new Promise((resolve) => {
                        const modal = document.getElementById("cropModal");
                        const cropImageEl = document.getElementById("cropImage");
            
                        modal.style.display = "flex";
                        cropImageEl.src = image_url;
            
                        cropImageEl.onload = () => {
                            if (cropper) cropper.destroy();
                            cropper = new Cropper(cropImageEl, {
                                aspectRatio: null,
                                viewMode: 1,
                                movable: true,
                                zoomable: true,
                                rotatable: true,
                                scalable: true,
                            });
                        };
            
                        document.getElementById("cropConfirm").onclick = function () {
                            const canvas = cropper.getCroppedCanvas({
                                width: 200,
                                height: 200,
                            });
            
                            canvas.toBlob((blob) => {
                                if (blob) {
                                    const croppedFile = new File([blob], `cropped_${fileName}`, { type: "image/png" });
                                    modal.style.display = "none";
                                    resolve(croppedFile);
                                }
                            }, "image/png");
                        };
            
                        document.getElementById("cropCancel").onclick = function () {
                            modal.style.display = "none";
                            if (cropper) cropper.destroy();
                        };
                    });
                }
            </script>
            
            
            

        <%- include('../adminLayouts/footer.ejs') %>
